{
  "name": "@franciscokloganb/appwrite-database-migration-tool",
  "description": "An appwrite database migration tool with the goal of making schema and data changes across environments easier and more predictable.",
  "author": "franciscokloganb",
  "keywords": ["appwrite", "database", "migration", "tool"],
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git://github.com/franciscokloganb/appwrite-database-migration-tool.git"
  },
  "publishConfig": {
    "access": "public"
  },
  "exports": {
    ".": {
      "import": "./dist/lib.esm.js",
      "node": "./dist/lib.cjs",
      "require": "./dist/lib.cjs",
      "default": "./dist/lib.esm.js",
      "types": "./dist/lib.d.ts"
    },
    "./lib": {
      "import": "./dist/lib.esm.js",
      "node": "./dist/lib.cjs",
      "require": "./dist/lib.cjs",
      "default": "./dist/lib.esm.js",
      "types": "./dist/lib.d.ts"
    },
    "./cli": {
      "import": "./dist/cli.esm.js",
      "node": "./dist/cli.cjs",
      "require": "./dist/cli.cjs",
      "default": "./dist/cli.esm.js",
      "types": "./dist/cli.d.ts"
    }
  },
  "bin": {
    "admt": "./dist/cli.cjs"
  },
  "main": "./dist/lib.cjs",
  "module": "./dist/lib.esm.js",
  "unpkg": "./dist/lib.umd.js",
  "types": "./dist/lib.d.ts",
  "files": ["dist"],
  "devDependencies": {
    "@biomejs/biome": "^1.7.3",
    "@commitlint/cli": "^19.3.0",
    "@commitlint/config-conventional": "^19.2.2",
    "@faker-js/faker": "^8.4.1",
    "@golevelup/ts-jest": "^0.5.0",
    "@jest/types": "^29.6.3",
    "@size-limit/preset-small-lib": "^11.1.3",
    "@types/jest": "^29.5.12",
    "@types/jest-when": "^3.5.5",
    "@types/node": "^20.12.11",
    "change-case": "^5.4.4",
    "commit-and-tag-version": "^12.4.1",
    "fishery": "^2.2.2",
    "husky": "^9.0.11",
    "jest": "^29.7.0",
    "jest-when": "^3.6.0",
    "microbundle": "^0.15.1",
    "npm-cli-login": "^1.0.0",
    "npm-run-all2": "^6.1.2",
    "pinst": "^3.0.0",
    "rimraf": "^5.0.7",
    "size-limit": "^11.1.6",
    "start-server-and-test": "^2.0.3",
    "taze": "^0.13.8",
    "ts-jest": "^29.1.2",
    "ts-node": "^10.9.2",
    "tslib": "^2.6.2",
    "typescript": "^5.4.5"
  },
  "peerDependencies": {
    "commander": "^12.0.0",
    "nanoid": "^3.3.4",
    "node-appwrite": ">=12.0.0",
    "tiny-invariant": "^1.3.1"
  },
  "engines": {
    "node": ">=18.0.0"
  },
  "scripts": {
    "add-shebang": "./add-shebang.sh",
    "auth:npm": "npm-cli-login -u $NPM_USER -p $NPM_PASS -e $NPM_EMAIL -r $NPM_REGISTRY -s $NPM_SCOPE",
    "biome:all": "biome check --apply-unsafe --formatter-enabled=true --linter-enabled=true --organize-imports-enabled=true --no-errors-on-unmatched .",
    "biome:precommit": "biome check --apply --changed --formatter-enabled=true --linter-enabled=true --organize-imports-enabled=true --no-errors-on-unmatched .",
    "biome:ci": "biome ci --no-errors-on-unmatched .",
    "postauth:npm": "cat ~/.npmrc",
    "prebuild": "rimraf dist",
    "build": "microbundle -i ./{cli,lib}.ts -f modern,esm,cjs,umd --target node",
    "postbuild": "npm run add-shebang",
    "dev": "microbundle watch",
    "prepare": "husky install && chmod ug+x .husky/*",
    "release": "commit-and-tag-version",
    "size": "size-limit",
    "test": "jest --watch",
    "test:ci": "jest --ci --maxWorkers=50%",
    "test:ci:coverage": "jest --ci --coverage --maxWorkers=50%",
    "typecheck": "tsc --project tsconfig.json",
    "prerelease": "git checkout main && git pull && run-s biome:precommit typecheck build",
    "postrelease": "git push --follow-tags --no-verify && npm publish",
    "prepack": "pinst --disable",
    "postpack": "pinst --enable",
    "up": "taze",
    "up:patch": "taze patch --install && npx taze -w && npm i",
    "up:minor": "taze minor --install && npx taze -w && npm i",
    "up:major": "taze major --install && npx taze -w && npm i"
  },
  "type": "module",
  "version": "1.0.5"
}
